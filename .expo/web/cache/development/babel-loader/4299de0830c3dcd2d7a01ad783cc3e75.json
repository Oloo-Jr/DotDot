{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RootNavigator from \"./navigator/RootNavigator\";\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    'Lexend-lighter': require(\"./assets/fonts/Lexend-Light.ttf\"),\n    'Lexend-light': require(\"./assets/fonts/Lexend-Regular.ttf\"),\n    'Lexend-bold': require(\"./assets/fonts/Lexend-Medium.ttf\")\n  });\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontLoaded = _useState2[0],\n    setFontLoaded = _useState2[1];\n  if (!fontLoaded) {\n    return _jsx(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      onError: function onError(err) {\n        return console.log(err);\n      }\n    });\n  }\n  return _jsx(RootNavigator, {});\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","RootNavigator","AppLoading","Font","React","useState","useEffect","useRef","jsx","_jsx","fetchFonts","loadAsync","require","App","_useState","_useState2","_slicedToArray","fontLoaded","setFontLoaded","startAsync","onFinish","onError","err","console","log","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/valen/Downloads/DotDot/DotDot/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport RootNavigator from './navigator/RootNavigator';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport React,{ useState, useEffect, useRef } from 'react'\n\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    'Lexend-lighter': require('./assets/fonts/Lexend-Light.ttf'),\n    'Lexend-light': require('./assets/fonts/Lexend-Regular.ttf'),\n    'Lexend-bold': require('./assets/fonts/Lexend-Medium.ttf'),\n\n  });\n};\n\nexport default function App() {\n\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => setFontLoaded(true)}\n        onError={(err) => console.log(err)}\n      />\n\n    );\n  }\n\n\n  return (\n    <RootNavigator />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,OAAO,8BAA8B;AACrC,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,aAAa;AACpB,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGzD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,OAAOP,IAAI,CAACQ,SAAS,CAAC;IACpB,gBAAgB,EAAEC,OAAO,kCAAkC,CAAC;IAC5D,cAAc,EAAEA,OAAO,oCAAoC,CAAC;IAC5D,aAAa,EAAEA,OAAO,mCAAmC;EAE3D,CAAC,CAAC;AACJ,CAAC;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAAoCT,QAAQ,CAAC,KAAK,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAI,CAACE,UAAU,EAAE;IACf,OACER,IAAA,CAACP,UAAU;MACTiB,UAAU,EAAET,UAAW;MACvBU,QAAQ,EAAE,SAAAA,SAAA;QAAA,OAAMF,aAAa,CAAC,IAAI,CAAC;MAAA,CAAC;MACpCG,OAAO,EAAE,SAAAA,QAACC,GAAG;QAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAA;IAAC,CACpC,CAAC;EAGN;EAGA,OACEb,IAAA,CAACR,aAAa,IAAE,CAAC;AAErB;AAEA,IAAMwB,MAAM,GAAG3B,UAAU,CAAC4B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}