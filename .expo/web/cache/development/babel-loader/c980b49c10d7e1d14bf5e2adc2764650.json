{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PanGestureHandler, State as GestureState } from 'react-native-gesture-handler';\nimport Animated, { interpolate, runOnJS, useAnimatedGestureHandler, useAnimatedStyle, useDerivedValue, useSharedValue, withSpring } from 'react-native-reanimated';\nimport DrawerProgressContext from \"../../utils/DrawerProgressContext\";\nimport Overlay from \"./Overlay\";\nvar SWIPE_DISTANCE_MINIMUM = 5;\nvar DEFAULT_DRAWER_WIDTH = '80%';\nvar minmax = function () {\n  var _f = function _f(value, start, end) {\n    return Math.min(Math.max(value, start), end);\n  };\n  _f._closure = {};\n  _f.asString = \"function _f(value,start,end){return Math.min(Math.max(value,start),end);}\";\n  _f.__workletHash = 12387352865556;\n  _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (10:15)\";\n  return _f;\n}();\nexport default function Drawer(_ref) {\n  var dimensions = _ref.dimensions,\n    drawerPosition = _ref.drawerPosition,\n    drawerStyle = _ref.drawerStyle,\n    drawerType = _ref.drawerType,\n    gestureHandlerProps = _ref.gestureHandlerProps,\n    hideStatusBarOnOpen = _ref.hideStatusBarOnOpen,\n    keyboardDismissMode = _ref.keyboardDismissMode,\n    onClose = _ref.onClose,\n    onOpen = _ref.onOpen,\n    open = _ref.open,\n    overlayStyle = _ref.overlayStyle,\n    renderDrawerContent = _ref.renderDrawerContent,\n    renderSceneContent = _ref.renderSceneContent,\n    statusBarAnimation = _ref.statusBarAnimation,\n    swipeDistanceThreshold = _ref.swipeDistanceThreshold,\n    swipeEdgeWidth = _ref.swipeEdgeWidth,\n    swipeEnabled = _ref.swipeEnabled,\n    swipeVelocityThreshold = _ref.swipeVelocityThreshold,\n    overlayAccessibilityLabel = _ref.overlayAccessibilityLabel;\n  var getDrawerWidth = function getDrawerWidth() {\n    var _ref3 = StyleSheet.flatten(drawerStyle) || {},\n      _ref3$width = _ref3.width,\n      width = _ref3$width === void 0 ? DEFAULT_DRAWER_WIDTH : _ref3$width;\n    if (typeof width === 'string' && width.endsWith('%')) {\n      var percentage = Number(width.replace(/%$/, ''));\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n    return typeof width === 'number' ? width : 0;\n  };\n  var drawerWidth = getDrawerWidth();\n  var isOpen = drawerType === 'permanent' ? true : open;\n  var isRight = drawerPosition === 'right';\n  var getDrawerTranslationX = React.useCallback(function () {\n    var _f = function _f(open) {\n      if (drawerPosition === 'left') {\n        return open ? 0 : -drawerWidth;\n      }\n      return open ? 0 : drawerWidth;\n    };\n    _f._closure = {\n      drawerPosition: drawerPosition,\n      drawerWidth: drawerWidth\n    };\n    _f.asString = \"function _f(open){const{drawerPosition,drawerWidth}=jsThis._closure;{if(drawerPosition==='left'){return open?0:-drawerWidth;}return open?0:drawerWidth;}}\";\n    _f.__workletHash = 4752955090285;\n    _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (53:50)\";\n    return _f;\n  }(), [drawerPosition, drawerWidth]);\n  var hideStatusBar = React.useCallback(function (hide) {\n    if (hideStatusBarOnOpen) {\n      StatusBar.setHidden(hide, statusBarAnimation);\n    }\n  }, [hideStatusBarOnOpen, statusBarAnimation]);\n  React.useEffect(function () {\n    hideStatusBar(isOpen);\n    return function () {\n      return hideStatusBar(false);\n    };\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n  var interactionHandleRef = React.useRef(null);\n  var startInteraction = function startInteraction() {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n  var endInteraction = function endInteraction() {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n  var hideKeyboard = function hideKeyboard() {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n  var onGestureStart = function onGestureStart() {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n  var onGestureFinish = function onGestureFinish() {\n    endInteraction();\n  };\n  var hitSlop = isRight ? {\n    right: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  } : {\n    left: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  };\n  var touchStartX = useSharedValue(0);\n  var touchX = useSharedValue(0);\n  var translationX = useSharedValue(getDrawerTranslationX(open));\n  var gestureState = useSharedValue(GestureState.UNDETERMINED);\n  var toggleDrawer = React.useCallback(function () {\n    var _f = function _f(_ref2) {\n      var open = _ref2.open,\n        isUserInitiated = _ref2.isUserInitiated,\n        velocity = _ref2.velocity;\n      var translateX = getDrawerTranslationX(open);\n      touchStartX.value = 0;\n      touchX.value = 0;\n      translationX.value = withSpring(translateX, {\n        velocity: velocity,\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01\n      });\n      if (!isUserInitiated) {\n        return;\n      }\n      if (open) {\n        runOnJS(onOpen)();\n      } else {\n        runOnJS(onClose)();\n      }\n    };\n    _f._closure = {\n      getDrawerTranslationX: getDrawerTranslationX,\n      touchStartX: touchStartX,\n      touchX: touchX,\n      translationX: translationX,\n      withSpring: withSpring,\n      runOnJS: runOnJS,\n      onOpen: onOpen,\n      onClose: onClose\n    };\n    _f.asString = \"function _f(_ref2){const{getDrawerTranslationX,touchStartX,touchX,translationX,withSpring,runOnJS,onOpen,onClose}=jsThis._closure;{let{open:open,isUserInitiated:isUserInitiated,velocity:velocity}=_ref2;const translateX=getDrawerTranslationX(open);touchStartX.value=0;touchX.value=0;translationX.value=withSpring(translateX,{velocity:velocity,stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01});if(!isUserInitiated){return;}if(open){runOnJS(onOpen)();}else{runOnJS(onClose)();}}}\";\n    _f.__workletHash = 284988876842;\n    _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (110:41)\";\n    return _f;\n  }(), [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]);\n  React.useEffect(function () {\n    return toggleDrawer({\n      open: open,\n      isUserInitiated: false\n    });\n  }, [open, toggleDrawer]);\n  var onGestureEvent = useAnimatedGestureHandler({\n    onStart: function () {\n      var _f = function _f(event, ctx) {\n        ctx.hasCalledOnStart = false;\n        ctx.startX = translationX.value;\n        gestureState.value = event.state;\n        touchStartX.value = event.x;\n      };\n      _f._closure = {\n        translationX: translationX,\n        gestureState: gestureState,\n        touchStartX: touchStartX\n      };\n      _f.asString = \"function _f(event,ctx){const{translationX,gestureState,touchStartX}=jsThis._closure;{ctx.hasCalledOnStart=false;ctx.startX=translationX.value;gestureState.value=event.state;touchStartX.value=event.x;}}\";\n      _f.__workletHash = 7995461185439;\n      _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (144:13)\";\n      return _f;\n    }(),\n    onActive: function () {\n      var _f = function _f(event, ctx) {\n        touchX.value = event.x;\n        translationX.value = ctx.startX + event.translationX;\n        gestureState.value = event.state;\n        if (!ctx.hasCalledOnStart) {\n          ctx.hasCalledOnStart = true;\n          runOnJS(onGestureStart)();\n        }\n      };\n      _f._closure = {\n        touchX: touchX,\n        translationX: translationX,\n        gestureState: gestureState,\n        runOnJS: runOnJS,\n        onGestureStart: onGestureStart\n      };\n      _f.asString = \"function _f(event,ctx){const{touchX,translationX,gestureState,runOnJS,onGestureStart}=jsThis._closure;{touchX.value=event.x;translationX.value=ctx.startX+event.translationX;gestureState.value=event.state;if(!ctx.hasCalledOnStart){ctx.hasCalledOnStart=true;runOnJS(onGestureStart)();}}}\";\n      _f.__workletHash = 2717092431621;\n      _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (150:14)\";\n      return _f;\n    }(),\n    onEnd: function () {\n      var _f = function _f(event) {\n        gestureState.value = event.state;\n        var nextOpen = Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM && Math.abs(event.translationX) > swipeVelocityThreshold || Math.abs(event.translationX) > swipeDistanceThreshold ? drawerPosition === 'left' ? (event.velocityX === 0 ? event.translationX : event.velocityX) > 0 : (event.velocityX === 0 ? event.translationX : event.velocityX) < 0 : open;\n        toggleDrawer({\n          open: nextOpen,\n          isUserInitiated: true,\n          velocity: event.velocityX\n        });\n      };\n      _f._closure = {\n        gestureState: gestureState,\n        SWIPE_DISTANCE_MINIMUM: SWIPE_DISTANCE_MINIMUM,\n        swipeVelocityThreshold: swipeVelocityThreshold,\n        swipeDistanceThreshold: swipeDistanceThreshold,\n        drawerPosition: drawerPosition,\n        open: open,\n        toggleDrawer: toggleDrawer\n      };\n      _f.asString = \"function _f(event){const{gestureState,SWIPE_DISTANCE_MINIMUM,swipeVelocityThreshold,swipeDistanceThreshold,drawerPosition,open,toggleDrawer}=jsThis._closure;{gestureState.value=event.state;const nextOpen=Math.abs(event.translationX)>SWIPE_DISTANCE_MINIMUM&&Math.abs(event.translationX)>swipeVelocityThreshold||Math.abs(event.translationX)>swipeDistanceThreshold?drawerPosition==='left'?(event.velocityX===0?event.translationX:event.velocityX)>0:(event.velocityX===0?event.translationX:event.velocityX)<0:open;toggleDrawer({open:nextOpen,isUserInitiated:true,velocity:event.velocityX});}}\";\n      _f.__workletHash = 5030620258728;\n      _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (163:11)\";\n      return _f;\n    }(),\n    onFinish: function () {\n      var _f = function _f() {\n        runOnJS(onGestureFinish)();\n      };\n      _f._closure = {\n        runOnJS: runOnJS,\n        onGestureFinish: onGestureFinish\n      };\n      _f.asString = \"function _f(){const{runOnJS,onGestureFinish}=jsThis._closure;{runOnJS(onGestureFinish)();}}\";\n      _f.__workletHash = 10753070071248;\n      _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (176:14)\";\n      return _f;\n    }()\n  });\n  var translateX = useDerivedValue(function () {\n    var _f = function _f() {\n      var touchDistance = drawerType === 'front' && gestureState.value === GestureState.ACTIVE ? minmax(drawerPosition === 'left' ? touchStartX.value - drawerWidth : dimensions.width - drawerWidth - touchStartX.value, 0, dimensions.width) : 0;\n      var translateX = drawerPosition === 'left' ? minmax(translationX.value + touchDistance, -drawerWidth, 0) : minmax(translationX.value - touchDistance, 0, drawerWidth);\n      return translateX;\n    };\n    _f._closure = {\n      drawerType: drawerType,\n      gestureState: gestureState,\n      GestureState: {\n        ACTIVE: GestureState.ACTIVE\n      },\n      minmax: minmax,\n      drawerPosition: drawerPosition,\n      touchStartX: touchStartX,\n      drawerWidth: drawerWidth,\n      dimensions: {\n        width: dimensions.width\n      },\n      translationX: translationX\n    };\n    _f.asString = \"function _f(){const{drawerType,gestureState,GestureState,minmax,drawerPosition,touchStartX,drawerWidth,dimensions,translationX}=jsThis._closure;{const touchDistance=drawerType==='front'&&gestureState.value===GestureState.ACTIVE?minmax(drawerPosition==='left'?touchStartX.value-drawerWidth:dimensions.width-drawerWidth-touchStartX.value,0,dimensions.width):0;const translateX=drawerPosition==='left'?minmax(translationX.value+touchDistance,-drawerWidth,0):minmax(translationX.value-touchDistance,0,drawerWidth);return translateX;}}\";\n    _f.__workletHash = 16881564590342;\n    _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (180:37)\";\n    return _f;\n  }());\n  var isRTL = I18nManager.getConstants().isRTL;\n  var drawerAnimatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      var distanceFromEdge = dimensions.width - drawerWidth;\n      return {\n        transform: drawerType === 'permanent' ? [] : [{\n          translateX: (drawerType === 'back' ? 0 : translateX.value) + (drawerPosition === 'left' ? isRTL ? -distanceFromEdge : 0 : isRTL ? 0 : distanceFromEdge)\n        }]\n      };\n    };\n    _f._closure = {\n      dimensions: {\n        width: dimensions.width\n      },\n      drawerWidth: drawerWidth,\n      drawerType: drawerType,\n      translateX: translateX,\n      drawerPosition: drawerPosition,\n      isRTL: isRTL\n    };\n    _f.asString = \"function _f(){const{dimensions,drawerWidth,drawerType,translateX,drawerPosition,isRTL}=jsThis._closure;{const distanceFromEdge=dimensions.width-drawerWidth;return{transform:drawerType==='permanent'?[]:[{translateX:(drawerType==='back'?0:translateX.value)+(drawerPosition==='left'?isRTL?-distanceFromEdge:0:isRTL?0:distanceFromEdge)}]};}}\";\n    _f.__workletHash = 17545005580326;\n    _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (211:47)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var contentAnimatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        transform: drawerType === 'permanent' ? [] : [{\n          translateX: drawerType === 'front' ? 0 : translateX.value + drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n        }]\n      };\n    };\n    _f._closure = {\n      drawerType: drawerType,\n      translateX: translateX,\n      drawerWidth: drawerWidth,\n      drawerPosition: drawerPosition\n    };\n    _f.asString = \"function _f(){const{drawerType,translateX,drawerWidth,drawerPosition}=jsThis._closure;{return{transform:drawerType==='permanent'?[]:[{translateX:drawerType==='front'?0:translateX.value+drawerWidth*(drawerPosition==='left'?1:-1)}]};}}\";\n    _f.__workletHash = 10940802030343;\n    _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (224:48)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var progress = useDerivedValue(function () {\n    var _f = function _f() {\n      return drawerType === 'permanent' ? 1 : interpolate(translateX.value, [getDrawerTranslationX(false), getDrawerTranslationX(true)], [0, 1]);\n    };\n    _f._closure = {\n      drawerType: drawerType,\n      interpolate: interpolate,\n      translateX: translateX,\n      getDrawerTranslationX: getDrawerTranslationX\n    };\n    _f.asString = \"function _f(){const{drawerType,interpolate,translateX,getDrawerTranslationX}=jsThis._closure;{return drawerType==='permanent'?1:interpolate(translateX.value,[getDrawerTranslationX(false),getDrawerTranslationX(true)],[0,1]);}}\";\n    _f.__workletHash = 10677902672597;\n    _f.__location = \"C:\\\\Users\\\\valen\\\\Downloads\\\\DotDot\\\\DotDot\\\\node_modules\\\\@react-navigation\\\\drawer\\\\lib\\\\module\\\\views\\\\modern\\\\Drawer.js (236:35)\";\n    return _f;\n  }());\n  return React.createElement(DrawerProgressContext.Provider, {\n    value: progress\n  }, React.createElement(PanGestureHandler, _extends({\n    activeOffsetX: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    failOffsetY: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    hitSlop: hitSlop,\n    enabled: drawerType !== 'permanent' && swipeEnabled,\n    onGestureEvent: onGestureEvent\n  }, gestureHandlerProps), React.createElement(Animated.View, {\n    style: [styles.main, {\n      flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'\n    }]\n  }, React.createElement(Animated.View, {\n    style: [styles.content, contentAnimatedStyle]\n  }, React.createElement(View, {\n    accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n    importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n    style: styles.content\n  }, renderSceneContent()), drawerType !== 'permanent' ? React.createElement(Overlay, {\n    progress: progress,\n    onPress: function onPress() {\n      return toggleDrawer({\n        open: false,\n        isUserInitiated: true\n      });\n    },\n    style: overlayStyle,\n    accessibilityLabel: overlayAccessibilityLabel\n  }) : null), React.createElement(Animated.View, {\n    removeClippedSubviews: Platform.OS !== 'ios',\n    style: [styles.container, {\n      position: drawerType === 'permanent' ? 'relative' : 'absolute',\n      zIndex: drawerType === 'back' ? -1 : 0\n    }, drawerAnimatedStyle, drawerStyle]\n  }, renderDrawerContent()))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH\n  },\n  content: {\n    flex: 1\n  },\n  main: _objectSpread({\n    flex: 1\n  }, Platform.select({\n    web: null,\n    default: {\n      overflow: 'hidden'\n    }\n  }))\n});","map":{"version":3,"sources":["views/modern/Drawer.tsx"],"names":["React","I18nManager","InteractionManager","Keyboard","Platform","StatusBar","PanGestureHandler","State","GestureState","Animated","interpolate","runOnJS","useAnimatedGestureHandler","useAnimatedStyle","useDerivedValue","useSharedValue","withSpring","DrawerProgressContext","Overlay","SWIPE_DISTANCE_MINIMUM","DEFAULT_DRAWER_WIDTH","minmax","value","start","end","Math","min","max","Drawer","dimensions","drawerPosition","drawerStyle","drawerType","gestureHandlerProps","hideStatusBarOnOpen","keyboardDismissMode","onClose","onOpen","open","overlayStyle","renderDrawerContent","renderSceneContent","statusBarAnimation","swipeDistanceThreshold","swipeEdgeWidth","swipeEnabled","swipeVelocityThreshold","overlayAccessibilityLabel","getDrawerWidth","width","StyleSheet","flatten","endsWith","percentage","Number","replace","isFinite","drawerWidth","isOpen","isRight","getDrawerTranslationX","useCallback","hideStatusBar","hide","setHidden","useEffect","interactionHandleRef","useRef","startInteraction","current","createInteractionHandle","endInteraction","clearInteractionHandle","hideKeyboard","dismiss","onGestureStart","onGestureFinish","hitSlop","right","undefined","left","touchStartX","touchX","translationX","gestureState","UNDETERMINED","toggleDrawer","isUserInitiated","velocity","translateX","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","onGestureEvent","onStart","event","ctx","hasCalledOnStart","startX","state","x","onActive","onEnd","nextOpen","abs","velocityX","onFinish","touchDistance","ACTIVE","isRTL","getConstants","drawerAnimatedStyle","distanceFromEdge","transform","contentAnimatedStyle","progress","styles","main","flexDirection","content","OS","container","position","zIndex","create","top","bottom","maxWidth","flex","select","web","default","overflow"],"mappings":"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","sourceRoot":"../../../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { I18nManager, InteractionManager, Keyboard, Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { PanGestureHandler, State as GestureState } from 'react-native-gesture-handler';\nimport Animated, { interpolate, runOnJS, useAnimatedGestureHandler, useAnimatedStyle, useDerivedValue, useSharedValue, withSpring } from 'react-native-reanimated';\nimport DrawerProgressContext from '../../utils/DrawerProgressContext';\nimport Overlay from './Overlay';\nconst SWIPE_DISTANCE_MINIMUM = 5;\nconst DEFAULT_DRAWER_WIDTH = '80%';\nconst minmax = (value, start, end) => {\n  'worklet';\n\n  return Math.min(Math.max(value, start), end);\n};\nexport default function Drawer(_ref) {\n  let {\n    dimensions,\n    drawerPosition,\n    drawerStyle,\n    drawerType,\n    gestureHandlerProps,\n    hideStatusBarOnOpen,\n    keyboardDismissMode,\n    onClose,\n    onOpen,\n    open,\n    overlayStyle,\n    renderDrawerContent,\n    renderSceneContent,\n    statusBarAnimation,\n    swipeDistanceThreshold,\n    swipeEdgeWidth,\n    swipeEnabled,\n    swipeVelocityThreshold,\n    overlayAccessibilityLabel\n  } = _ref;\n  const getDrawerWidth = () => {\n    const {\n      width = DEFAULT_DRAWER_WIDTH\n    } = StyleSheet.flatten(drawerStyle) || {};\n    if (typeof width === 'string' && width.endsWith('%')) {\n      // Try to calculate width if a percentage is given\n      const percentage = Number(width.replace(/%$/, ''));\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n    return typeof width === 'number' ? width : 0;\n  };\n  const drawerWidth = getDrawerWidth();\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n  const getDrawerTranslationX = React.useCallback(open => {\n    'worklet';\n\n    if (drawerPosition === 'left') {\n      return open ? 0 : -drawerWidth;\n    }\n    return open ? 0 : drawerWidth;\n  }, [drawerPosition, drawerWidth]);\n  const hideStatusBar = React.useCallback(hide => {\n    if (hideStatusBarOnOpen) {\n      StatusBar.setHidden(hide, statusBarAnimation);\n    }\n  }, [hideStatusBarOnOpen, statusBarAnimation]);\n  React.useEffect(() => {\n    hideStatusBar(isOpen);\n    return () => hideStatusBar(false);\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n  const interactionHandleRef = React.useRef(null);\n  const startInteraction = () => {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n  const endInteraction = () => {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n  const hideKeyboard = () => {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n  const onGestureStart = () => {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n  const onGestureFinish = () => {\n    endInteraction();\n  };\n\n  // FIXME: Currently hitSlop is broken when on Android when drawer is on right\n  // https://github.com/software-mansion/react-native-gesture-handler/issues/569\n  const hitSlop = isRight ?\n  // Extend hitSlop to the side of the screen when drawer is closed\n  // This lets the user drag the drawer from the side of the screen\n  {\n    right: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  } : {\n    left: 0,\n    width: isOpen ? undefined : swipeEdgeWidth\n  };\n  const touchStartX = useSharedValue(0);\n  const touchX = useSharedValue(0);\n  const translationX = useSharedValue(getDrawerTranslationX(open));\n  const gestureState = useSharedValue(GestureState.UNDETERMINED);\n  const toggleDrawer = React.useCallback(_ref2 => {\n    'worklet';\n\n    let {\n      open,\n      isUserInitiated,\n      velocity\n    } = _ref2;\n    const translateX = getDrawerTranslationX(open);\n    touchStartX.value = 0;\n    touchX.value = 0;\n    translationX.value = withSpring(translateX, {\n      velocity,\n      stiffness: 1000,\n      damping: 500,\n      mass: 3,\n      overshootClamping: true,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 0.01\n    });\n    if (!isUserInitiated) {\n      return;\n    }\n    if (open) {\n      runOnJS(onOpen)();\n    } else {\n      runOnJS(onClose)();\n    }\n  }, [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]);\n  React.useEffect(() => toggleDrawer({\n    open,\n    isUserInitiated: false\n  }), [open, toggleDrawer]);\n  const onGestureEvent = useAnimatedGestureHandler({\n    onStart: (event, ctx) => {\n      ctx.hasCalledOnStart = false;\n      ctx.startX = translationX.value;\n      gestureState.value = event.state;\n      touchStartX.value = event.x;\n    },\n    onActive: (event, ctx) => {\n      touchX.value = event.x;\n      translationX.value = ctx.startX + event.translationX;\n      gestureState.value = event.state;\n\n      // onStart will _always_ be called, even when the activation\n      // criteria isn't met yet. This makes sure onGestureStart is only\n      // called when the criteria is really met.\n      if (!ctx.hasCalledOnStart) {\n        ctx.hasCalledOnStart = true;\n        runOnJS(onGestureStart)();\n      }\n    },\n    onEnd: event => {\n      gestureState.value = event.state;\n      const nextOpen = Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM && Math.abs(event.translationX) > swipeVelocityThreshold || Math.abs(event.translationX) > swipeDistanceThreshold ? drawerPosition === 'left' ?\n      // If swiped to right, open the drawer, otherwise close it\n      (event.velocityX === 0 ? event.translationX : event.velocityX) > 0 :\n      // If swiped to left, open the drawer, otherwise close it\n      (event.velocityX === 0 ? event.translationX : event.velocityX) < 0 : open;\n      toggleDrawer({\n        open: nextOpen,\n        isUserInitiated: true,\n        velocity: event.velocityX\n      });\n    },\n    onFinish: () => {\n      runOnJS(onGestureFinish)();\n    }\n  });\n  const translateX = useDerivedValue(() => {\n    // Comment stolen from react-native-gesture-handler/DrawerLayout\n    //\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep start position\n    // of the gesture. Then we use that value to calculate how much we need to subtract from\n    // the translationX. If the gesture started on the greyed out area we take the distance from the\n    // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n    // drawer be pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    const touchDistance = drawerType === 'front' && gestureState.value === GestureState.ACTIVE ? minmax(drawerPosition === 'left' ? touchStartX.value - drawerWidth : dimensions.width - drawerWidth - touchStartX.value, 0, dimensions.width) : 0;\n    const translateX = drawerPosition === 'left' ? minmax(translationX.value + touchDistance, -drawerWidth, 0) : minmax(translationX.value - touchDistance, 0, drawerWidth);\n    return translateX;\n  });\n  const isRTL = I18nManager.getConstants().isRTL;\n  const drawerAnimatedStyle = useAnimatedStyle(() => {\n    const distanceFromEdge = dimensions.width - drawerWidth;\n    return {\n      transform: drawerType === 'permanent' ?\n      // Reanimated needs the property to be present, but it results in Browser bug\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n      [] : [{\n        translateX:\n        // The drawer stays in place when `drawerType` is `back`\n        (drawerType === 'back' ? 0 : translateX.value) + (drawerPosition === 'left' ? isRTL ? -distanceFromEdge : 0 : isRTL ? 0 : distanceFromEdge)\n      }]\n    };\n  });\n  const contentAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      transform: drawerType === 'permanent' ?\n      // Reanimated needs the property to be present, but it results in Browser bug\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n      [] : [{\n        translateX:\n        // The screen content stays in place when `drawerType` is `front`\n        drawerType === 'front' ? 0 : translateX.value + drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n      }]\n    };\n  });\n  const progress = useDerivedValue(() => {\n    return drawerType === 'permanent' ? 1 : interpolate(translateX.value, [getDrawerTranslationX(false), getDrawerTranslationX(true)], [0, 1]);\n  });\n  return /*#__PURE__*/React.createElement(DrawerProgressContext.Provider, {\n    value: progress\n  }, /*#__PURE__*/React.createElement(PanGestureHandler, _extends({\n    activeOffsetX: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    failOffsetY: [-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM],\n    hitSlop: hitSlop,\n    enabled: drawerType !== 'permanent' && swipeEnabled,\n    onGestureEvent: onGestureEvent\n  }, gestureHandlerProps), /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.main, {\n      flexDirection: drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row'\n    }]\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.content, contentAnimatedStyle]\n  }, /*#__PURE__*/React.createElement(View, {\n    accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n    importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n    style: styles.content\n  }, renderSceneContent()), drawerType !== 'permanent' ? /*#__PURE__*/React.createElement(Overlay, {\n    progress: progress,\n    onPress: () => toggleDrawer({\n      open: false,\n      isUserInitiated: true\n    }),\n    style: overlayStyle,\n    accessibilityLabel: overlayAccessibilityLabel\n  }) : null), /*#__PURE__*/React.createElement(Animated.View, {\n    removeClippedSubviews: Platform.OS !== 'ios',\n    style: [styles.container, {\n      position: drawerType === 'permanent' ? 'relative' : 'absolute',\n      zIndex: drawerType === 'back' ? -1 : 0\n    }, drawerAnimatedStyle, drawerStyle]\n  }, renderDrawerContent()))));\n}\nconst styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH\n  },\n  content: {\n    flex: 1\n  },\n  main: {\n    flex: 1,\n    ...Platform.select({\n      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.\n      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.\n      web: null,\n      default: {\n        overflow: 'hidden'\n      }\n    })\n  }\n});\n//# sourceMappingURL=Drawer.js.map"]},"metadata":{},"sourceType":"module"}